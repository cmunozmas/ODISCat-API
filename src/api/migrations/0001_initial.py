# Generated by Django 3.1.6 on 2021-02-06 20:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Catalogue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitter_oe_id', models.IntegerField()),
                ('entry_date', models.DateTimeField()),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('ds_url', models.CharField(max_length=255)),
                ('ds_parent_project_url', models.CharField(blank=True, max_length=255, null=True)),
                ('ds_project_end_date', models.DateTimeField(blank=True, null=True)),
                ('ds_name_english', models.CharField(max_length=255)),
                ('ds_name_original', models.CharField(blank=True, max_length=255, null=True)),
                ('ds_acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('ds_abstract', models.TextField()),
                ('ds_citation', models.TextField()),
                ('ds_contact_name', models.CharField(max_length=255)),
                ('ds_contact_email', models.CharField(max_length=255)),
                ('ds_tech_contact_email', models.CharField(max_length=255)),
                ('ds_languages', models.TextField()),
                ('ds_countries', models.TextField()),
                ('ds_tech_notes', models.TextField(blank=True, null=True)),
                ('md_spatial_coverage', models.TextField(blank=True, null=True)),
                ('ds_site_countries', models.TextField(blank=True, null=True)),
                ('is_live', models.IntegerField(blank=True, null=True)),
                ('is_live_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'catalogue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataSystems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'data_systems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dois',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'dois',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='M2Mtechnologies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'm2mtechnologies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MigrationVersions',
            fields=[
                ('version', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('executed_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'migration_versions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Policies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'policies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeaRegions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'sea_regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Standards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'standards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Themes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'themes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueContributedto',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_contributedto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueDois',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_dois',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueKeywords',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueM2Mtechnologies',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_m2mtechnologies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueObtainedfrom',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_obtainedfrom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueSeaRegions',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_sea_regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueThemes',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_themes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogueTypes',
            fields=[
                ('catalogue', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.catalogue')),
            ],
            options={
                'db_table': 'catalogue_types',
                'managed': False,
            },
        ),
    ]
